---
title: "2025-09-18"
subtitle: "Enough statistics to be dangerous"
format: html
author: Sebastian Sauer
toc: true
number-sections: true
---

# Welcome!


# Load the libraries


```{r}
#| message: false
library(easystats)
library(tidyverse)
library(ggpubr)
```

# Load the data

```{r}
penguins <- read.csv("https://vincentarelbundock.github.io/Rdatasets/csv/palmerpenguins/penguins.csv")

# head(d)  # see the first few rows, the "head" of the table
```



# Have fun!

# Regression


## y: numeric, x1: numeric, x2: nominal

Research question

>  Is weight a (linear) function of bill length and sex?


pseudo code:

`lm(y ~ x1 + x2, data = name_of_my_dataset)`


## Exercise

Write the lm code for the above research question.
Save the results of the lm in some object.

```{r}
modelx2 <- lm(body_mass_g ~ bill_length_mm + sex, data = penguins)

summary(modelx2)  # parameters(modelx2)
coef(modelx2)
modelx2
```

```{r}
parameters(modelx2) |> print_md()
```

# Case study on movie succes


## Load data

```{r}
movies <- read.csv("https://vincentarelbundock.github.io/Rdatasets/csv/ggplot2movies/movies.csv")
```


## Overview on data

Including missing data

```{r}
movies |> 
  describe_distribution() |> 
  print_md()
```


## Visualize DV

```{r}
ggdensity(movies, x = "rating")
```


## Prepare data

```{r}
movies_nona <-
  movies |> 
  filter(budget > 0)
```


## Model rating ~ budget


```{r}
m_movies_budget <-
  lm(rating~budget, data = movies)

parameters(m_movies_budget) |> 
  print_md()

r2(m_movies_budget) 
```


# Inferential stats

## Ex.: Model DV: weight, IV: sex

- run the model (using LM, that classical, frequentist)
- tell if the the IV is "significant"



### Cleanse penguins

```{r}
penguins_filtered <- 
penguins |>  # and then
  filter(sex == "male" | sex == "female")
```


```{r}
lm_peng_weight_sex_filtered <-
  lm(body_mass_g ~ sex, data = penguins_filtered)

parameters(lm_peng_weight_sex_filtered)
r2(lm_peng_weight_sex_filtered)
```

"We found a difference in weight between female and male penguins, 95%CI [526g, 841g], 
with male animals being heavier."

--> We reject the H0 (H0: no difference in MEANS! between the two groups).


## Bayesian flavor


```{r}
library(rstanarm) 
```


Nearly the same R code as above:

Bayes is slower (approx. 2-3 secs)

```{r}
#| results: hide
lm_peng_weight_sex_filtered <-
  stan_glm(body_mass_g ~ sex, data = penguins_filtered)
```

```{r}
parameters(lm_peng_weight_sex_filtered) |> print_md()
r2(lm_peng_weight_sex_filtered)
```


# Common research designs


## two groups, output variable measured after the intervention

Example experiment:

- n = 40 (20 per group)
- RCT (randomized, controlled, trial)
- good measurements

```{mermaid}
flowchart LR
  g_control --> Y
  g_exp --> Y
```

## ... with pre-test


```{mermaid}
flowchart LR
  Y0 --> g_control
  Y0 --> g_exp
  g_control --> Y1
  g_exp --> Y1
```


## .... within subject design

```{mermaid}
flowchart LR
  Y0 --> g_control --> Y1 --> g_exp --> Y2
```


## Case study

https://fopro.netlify.app/090-modellieren#vorher-nachher-messung-1-between-variable

### Load the data

```{r}
#| results: hide
d_bringtnixtin_path <- "https://raw.githubusercontent.com/sebastiansauer/fopra/main/data/d_bringtnixtin.csv"
d_bringtnixtin <- read_csv(d_bringtnixtin_path)
```

### Prepare the data

```{r}
d_bringtnixtin <-
  d_bringtnixtin %>% 
  mutate(d = y2 - y1)
```



### Summarize the data

```{r}
d_bringtnixtin |> 
  describe_distribution() |> 
  print_md()
```


### Visualize the data

```{r}
ggboxplot(
  data = d_bringtnixtin,
  x = "g",
  y = "d",
  add = "mean"
)
```


```{r}
ggviolin(
  data = d_bringtnixtin,
  x = "g",
  y = "d",
  add = "mean_se"
)
```


### Modeling

```{r}
#| results: hide
m_bringtnixtin2 <- stan_glm(d ~ g,
                            data = d_bringtnixtin)
```

```{r}
parameters(m_bringtnixtin2) |> print_md()
```


```{r}
parameters(m_bringtnixtin2) |> plot()
```

